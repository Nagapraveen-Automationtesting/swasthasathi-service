# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#pipeline template configuration:
resources:
  repositories:
    - repository: pipeline-templates
      type: git
      name: Health/pipeline-templates
      ref: blackduck-jfrog

name: $(Date:yyyyMMdd)$(Rev:.r) #Do Not Change

trigger:
- aks-replica

pool:
  name: 'JHHProdAgent'


variables:

#- group: jio_health_variables
- group: SYN-RHH-GVARS-APP
- group: BlackDuck_Variables
- name: APP_NAME
  value: peoplecostdashboard
- name: ENV
  value: $(Build.SourceBranchName)
- name: IMAGE_NAME
  value: $(TARGET_ACR_IMAGE_BASE_NAME)$(APP_NAME):$(ENV)-latest_16
- name: VERSIONED_TAG
  value: $(ENV)-$(Build.BuildNumber)
- name: VERSIONED_IMAGE_NAME
  value: $(TARGET_ACR_IMAGE_BASE_NAME)$(APP_NAME):$(ENV)-$(Build.BuildNumber)

steps:
  #"MASTER TEMPLATE" path
- template: JioHealth/replica-build-pipeline.yml@pipeline-templates
  parameters:
      #unit test variables:
      run_unit_test_python: 'false'

      unit_test_python_version: 'python3.8'
      unit_test_pip_upgrade: ''
      unit_test_python_req: 'test-requirements.txt'
      unit_test_run_install_command: ''
      unit_test_run_command: 'make test-ci'
      unit_test_unset_http_proxy: 'unset http_proxy'
      unit_test_unset_https_proxy: 'unset https_proxy'
      unit_test_unset_no_proxy: 'unset no_proxy'

      #set java home variables:
      set_java_home_bifrost: 'false'

      set_java_home_jhhnonprod: 'false'

      #sonar variables:
      sonar_analysis_python: 'true'

      sonar_project_name: '$(APP_NAME)'
      sonar_branch_name: 'REP_UT'
      sonar_python_xunit_report_path: ''
      sonar_exclusions_python: ''

      #blackduck variables:
      jiohealth_bd_scan_python: 'false'

      jiohealth_bd_scan_timeout: '1200'

      #fortify variables:
      jiohealth_fortify_scan: 'false'

      fortify_version_id: '12560'

      #docker variables:
      docker_push: 'true'
      docker_build_args: '--network=host 
       --build-arg PROXY_NO=$PROXY_NO 
       --build-arg PROXY_HTTPS=$PROXY_HTTPS 
       --build-arg PROXY_HTTP=$PROXY_HTTP  
       -t $(IMAGE_NAME)'

      docker_push_bifrost: 'false'
      docker_build_bifrost_args: ''

      IMAGE_NAME: '$(TARGET_ACR_IMAGE_BASE_NAME)$(APP_NAME):$(ENV)-latest_16'
      VERSIONED_IMAGE_NAME: '$(TARGET_ACR_IMAGE_BASE_NAME)$(APP_NAME):$(ENV)-$(Build.BuildNumber)'